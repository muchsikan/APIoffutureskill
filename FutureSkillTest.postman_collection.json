{
	"info": {
		"_postman_id": "15530ec9-8a84-489b-aae7-7622f6ca3541",
		"name": "FutureSkillTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48223127",
		"_collection_link": "https://muchsikan-2998242.postman.co/workspace/futureskill~e0d460a9-e10a-4b87-9c36-d97d6d566c1e/collection/48223127-15530ec9-8a84-489b-aae7-7622f6ca3541?action=share&source=collection_link&creator=48223127"
	},
	"item": [
		{
			"name": "Get a post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"response body success\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"aut\");",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}",
					"host": [
						"{{baseURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"Created\");",
							"});",
							"",
							"pm.test(\"response body success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(101);",
							"    pm.expect(jsonData.body).to.eql(\"bar\");",
							"});",
							"",
							"// pm.test(\"Response time is less than 350ms\", function () {",
							" //   pm.expect(pm.response.responseTime).to.be.below(350);",
							"// });",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\",\"application/json; charset=utf-8\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\" : \"foo\" ,\n    \"body\" : \"bar\" ,\n    \"userID\" : 1\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}",
					"host": [
						"{{baseURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT update a POST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"   var jsonData = pm.response.json();",
							"    pm.expect(jsonData.title).to.eql(\"FutureSkill\");",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"   pm.response.to.have.header(\"Content-Type\" , \"application/json; charset=utf-8\");",
							"});",
							"",
							"let response = pm.response.json()",
							"pm.environment.set(\"id\",response.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\" : \"FutureSkill\" ,\n    \"body\" : \"bar\" ,\n    \"userID\" : 1\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response body is\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.eql({});",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{id}"
						}
					]
				}
			},
			"response": []
		}
	]
}